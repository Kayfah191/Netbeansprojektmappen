/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import java.text.SimpleDateFormat;  
import java.util.Date; 
import java.text.ParseException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
/**
 *
 * @author Rikard Söderek
 */
public class HittaAlienInfo extends javax.swing.JFrame {
    
    private InfDB idb;

    /**
     * Creates new form HittaAlienInfo
     */
    public HittaAlienInfo() {
        initComponents();
    try{
            idb = new InfDB("mibdb", "3306", "mibdba","mibkey");
           System.out.println("Allt fungerar (hittills))");
        }
        
        catch(InfException ex){
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        franDatumSpinner = new javax.swing.JSpinner();
        franLabel = new javax.swing.JLabel();
        sokRasBox = new javax.swing.JComboBox<>();
        rasLabel = new javax.swing.JLabel();
        tillLabel = new javax.swing.JLabel();
        tillDatumSpinner = new javax.swing.JSpinner();
        sokRasLabel = new javax.swing.JLabel();
        namnLabel = new javax.swing.JLabel();
        sokAllInfoLabel = new javax.swing.JLabel();
        listaAliensefterDatumButton = new javax.swing.JButton();
        listaAliensEfterRasButton = new javax.swing.JButton();
        sokDatumLabel = new javax.swing.JLabel();
        resultatTextArea = new javax.swing.JTextArea();
        ListaAlien = new javax.swing.JLabel();
        jnamn = new javax.swing.JTextField();
        jScrollPaneInfo = new javax.swing.JScrollPane();
        alienTabel = new javax.swing.JTable();
        visaInfo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Avbryt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        franDatumSpinner.setModel(new javax.swing.SpinnerDateModel());

        franLabel.setText("Från:");

        sokRasBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boglodite", "Squid", "Worm" }));

        rasLabel.setText("Ras:");
        rasLabel.setPreferredSize(null);

        tillLabel.setText("Till:");

        tillDatumSpinner.setModel(new javax.swing.SpinnerDateModel());

        sokRasLabel.setText("Lista aliens av en viss ras");

        namnLabel.setText("Namn:");

        sokAllInfoLabel.setText("Sök all information om enskild alien");

        listaAliensefterDatumButton.setText("Lista aliens");
        listaAliensefterDatumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAliensefterDatumButtonActionPerformed(evt);
            }
        });

        listaAliensEfterRasButton.setText("Lista aliens");
        listaAliensEfterRasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAliensEfterRasButtonActionPerformed(evt);
            }
        });

        sokDatumLabel.setText("Lista aliens registrerade mellan datum");

        resultatTextArea.setEditable(false);
        resultatTextArea.setBackground(new java.awt.Color(255, 255, 255));
        resultatTextArea.setColumns(20);
        resultatTextArea.setRows(5);

        ListaAlien.setText("Lista");

        jnamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jnamnActionPerformed(evt);
            }
        });

        alienTabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        alienTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Alien_ID", "Registreringsdatum", "Epost", "Lösenord", "Namn", "Telefon", "Plats", "Ansvarig_Agent"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alienTabel.setRowHeight(40);
        jScrollPaneInfo.setViewportView(alienTabel);

        visaInfo.setText("Visa info");
        visaInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visaInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sokDatumLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namnLabel)
                                    .addComponent(tillLabel)
                                    .addComponent(franLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sokAllInfoLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(franDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tillDatumSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(listaAliensefterDatumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jnamn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(visaInfo))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sokRasLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sokRasBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(12, 12, 12)
                                .addComponent(listaAliensEfterRasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(ListaAlien))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(resultatTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ListaAlien)
                        .addGap(11, 11, 11)
                        .addComponent(resultatTextArea))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sokRasLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sokRasBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listaAliensEfterRasButton))
                        .addGap(31, 31, 31)
                        .addComponent(sokDatumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(franDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(franLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tillDatumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tillLabel)
                            .addComponent(listaAliensefterDatumButton))))
                .addGap(25, 25, 25)
                .addComponent(sokAllInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namnLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jnamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(visaInfo)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    //Avbryt
      dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private String sökAllInfo(int iD){
        String resultatsträng = "";
        String ras = "";
        String extra = "";
        try{
        
        if (idb.fetchSingle("SELECT ALIEN_ID FROM BOGLODITE WHERE ALIEN_ID = " + iD) != null){
                        ras = "Boglodite";
                        extra = "Antal boogies:\n  " + idb.fetchSingle("SELECT ANTAL_BOOGIES FROM BOGLODITE WHERE ALIEN_ID = " + iD);
                    }
                    else if(idb.fetchSingle("SELECT ALIEN_ID FROM SQUID WHERE ALIEN_ID = " + iD) != null){
                        ras = "Squid";
                        extra = "Antal armar:\n  " + idb.fetchSingle("SELECT ANTAL_ARMAR FROM SQUID WHERE ALIEN_ID = " + iD);                        
                    }
                    else if(idb.fetchSingle("SELECT ALIEN_ID FROM WORM WHERE ALIEN_ID = " + iD) != null){
                        ras = "Worm";
                    }    
        HashMap<String, String> aliens = idb.fetchRow("SELECT * FROM ALIEN WHERE ALIEN_ID = " + iD);
        resultatsträng = "Namn:\n  " + aliens.get("NAMN")
            + "\nAlienID:\n  " + aliens.get("ALIEN_ID")
            + "\nRegistreringsdatum:\n  " + aliens.get("REGISTRERINGSDATUM")
            + "\nTelefon:\n  " + aliens.get("TELEFON")
            + "\n----------"
            + "\nRas:\n  " + ras
            + "\n" + extra    
            + "\n----------"
            + "\nOmråde:\n  " + idb.fetchSingle("SELECT BENAMNING FROM OMRADE WHERE OMRADES_ID = (SELECT FINNS_I FROM PLATS WHERE PLATS_ID = " + Integer.parseInt(aliens.get("PLATS")) + ")")
            + "\nPlats:\n  " + idb.fetchSingle("SELECT BENAMNING FROM PLATS WHERE PLATS_ID = " + Integer.parseInt(aliens.get("PLATS")))
            + "\n----------"
                
            + "\nAnsvarig Agent:\n  " + idb.fetchSingle("SELECT NAMN FROM AGENT WHERE AGENT_ID = " + Integer.parseInt(aliens.get("ANSVARIG_AGENT")));
        }
        catch (InfException undantag){
            JOptionPane.showMessageDialog(null, "Något gick fel med databasuppkopplingen!");
            System.out.println("Något gick fel! " + undantag);
        }
        return resultatsträng;
    }    
    
    private void listaAliensefterDatumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAliensefterDatumButtonActionPerformed
        try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String franD = dateFormat.format(franDatumSpinner.getValue());
            String tillD = dateFormat.format(tillDatumSpinner.getValue());

            String resultatsträng = "";
            ArrayList<String> alienMellanDatum = idb.fetchColumn("SELECT NAMN FROM ALIEN WHERE REGISTRERINGSDATUM BETWEEN \'" + franD + "\' AND \'" + tillD + "\'");
            for (String alien : alienMellanDatum){
                resultatsträng += alien + "\n";
            }
            resultatTextArea.setText(resultatsträng);
        }
        catch(InfException undantag){
            System.out.println(undantag);
        }
    }//GEN-LAST:event_listaAliensefterDatumButtonActionPerformed

    private void listaAliensEfterRasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAliensEfterRasButtonActionPerformed
        try{
            String sökRas = sokRasBox.getSelectedItem().toString().toUpperCase();
            String resultatsträng = "";
            ArrayList<String> rasAliens = idb.fetchColumn("SELECT NAMN FROM ALIEN WHERE ALIEN_ID IN (SELECT ALIEN_ID FROM " + sökRas + ")");
            for (String rasAlien : rasAliens){
                resultatsträng += rasAlien + "\n";
            }
            resultatTextArea.setText(resultatsträng);
        }
        catch(InfException undantag){
            System.out.println("Något gick fel! " + undantag);
        }
    }//GEN-LAST:event_listaAliensEfterRasButtonActionPerformed

    private void jnamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jnamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jnamnActionPerformed

    private void visaInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visaInfoActionPerformed
        HashMap<String, String> alien; // Information om agenten lagras i en HashMap

        try {
            String alienNamn = jnamn.getText(); //

            String fraga = "select * from alien where namn='" + alienNamn + "'";
            alien = idb.fetchRow(fraga); // Variabeln agent = Visar en rad med information om agenten

            // Agentens information presenteras i tabellen
            alienTabel.setValueAt(alien.get("Alien_ID"), 0, 0);               // Kolumn 1
            alienTabel.setValueAt(alien.get("Namn"), 0, 4);                   // Kolumn 2
            alienTabel.setValueAt(alien.get("Epost"), 0, 2);                  // Kolumn 3
            alienTabel.setValueAt(alien.get("Losenord"), 0, 3);               // Kolumn 4
            alienTabel.setValueAt(alien.get("Telefon"), 0, 5);                // Kolumn 5
            alienTabel.setValueAt(alien.get("Plats"), 0, 6);                 // Kolumn 6
            alienTabel.setValueAt(alien.get("Registreringsdatum"), 0, 1);          // Kolumn 7
            alienTabel.setValueAt(alien.get("Ansvarig_Agent"), 0, 7);      // Kolumn 8

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Kunde inte hitta Alien");
        }

    }//GEN-LAST:event_visaInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HittaAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HittaAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HittaAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HittaAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HittaAlienInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ListaAlien;
    private javax.swing.JTable alienTabel;
    private javax.swing.JSpinner franDatumSpinner;
    private javax.swing.JLabel franLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPaneInfo;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jnamn;
    private javax.swing.JButton listaAliensEfterRasButton;
    private javax.swing.JButton listaAliensefterDatumButton;
    private javax.swing.JLabel namnLabel;
    private javax.swing.JLabel rasLabel;
    private javax.swing.JTextArea resultatTextArea;
    private javax.swing.JLabel sokAllInfoLabel;
    private javax.swing.JLabel sokDatumLabel;
    private javax.swing.JComboBox<String> sokRasBox;
    private javax.swing.JLabel sokRasLabel;
    private javax.swing.JSpinner tillDatumSpinner;
    private javax.swing.JLabel tillLabel;
    private javax.swing.JButton visaInfo;
    // End of variables declaration//GEN-END:variables
}
